 10. Given:
class MyThread extends Thread {
 MyThread() {
 System.out.print(" MyThread");
 }
 public void run() {
 System.out.print(" bar");
 }
 public void run(String s) {
 System.out.print(" baz");
 }
}
public class TestThreads {
 public static void main (String [] args) {
 Thread t = new MyThread() {
 public void run() {
 System.out.print(" foo");
 }
 };
 t.start();
} }


What is the result?
 A. foo
 +B. MyThread foo
 C. MyThread bar
 D. foo bar
 E. foo bar baz
 F. bar foo
 G. Compilation fails
 H. An exception is thrown at runtime

 Answer:
   âœ“ B is correct. The first line of main we're constructing an instance of an anonymous inner
 class extending from MyThread. So the MyThread constructor runs and prints MyThread.
 Next, main() invokes start() on the new thread instance, which causes the overridden
 run() method (the run() method in the anonymous inner class) to be invoked.
   A, C, D, E, F, G, and H are incorrect based on the logic described above. (Objective 4.1)