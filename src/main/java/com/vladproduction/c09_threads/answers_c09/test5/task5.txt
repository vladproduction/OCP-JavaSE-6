5. Given:
 1. public class WaitTest {
 2. public static void main(String [] args) {
 3. System.out.print("1 ");
 4. synchronized(args){
 5. System.out.print("2 ");
 6. try {
 7. args.wait();
 8. }
 9. catch(InterruptedException e){}
10. }
11. System.out.print("3 ");
12. }
13. }
 What is the result of trying to compile and run this program?
 A. It fails to compile because the IllegalMonitorStateException of wait() is not dealt
with in line 7
 B. 1 2 3
 C. 1 3
 +D. 1 2
 E. At runtime, it throws an IllegalMonitorStateException when trying to wait
 F. It will fail to compile because it has to be synchronized on the this object

 Answer:
   âœ“ D is correct. 1 and 2 will be printed, but there will be no return from the wait call because
 no other thread will notify the main thread, so 3 will never be printed. It's frozen at line 7.
   A is incorrect; IllegalMonitorStateException is an unchecked exception. B and C
 are incorrect; 3 will never be printed, since this program will wait forever. E is incorrect
 because IllegalMonitorStateException will never be thrown because the wait()
 is done on args within a block of code synchronized on args. F is incorrect because any
 object can be used to synchronize on and this and static don't mix. (Objective 4.4)